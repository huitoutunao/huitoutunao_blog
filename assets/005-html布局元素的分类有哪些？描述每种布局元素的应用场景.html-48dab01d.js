import{_ as a,o as e,c as i,d as h}from"./app-66d59838.js";const r={},d=h('<h1 id="_005-html-布局元素的分类有哪些-描述每种布局元素的应用场景" tabindex="-1"><a class="header-anchor" href="#_005-html-布局元素的分类有哪些-描述每种布局元素的应用场景" aria-hidden="true">#</a> 005-html 布局元素的分类有哪些？描述每种布局元素的应用场景</h1><h2 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h2><h3 id="内联元素" tabindex="-1"><a class="header-anchor" href="#内联元素" aria-hidden="true">#</a> 内联元素</h3><p>span,a,b,strong,i,em,br,input,textarea</p><p>本身属性为 display: inline;</p><p>和其他行内元素从左到右一行显示，不可以直接控制宽度、高度等其他相关 css 属性，但是可以直接设置左右内外边距的值（上下也可以设置，但是不影响周围元素）。</p><p>宽度是由本身内容大小决定的（文本、图片等）</p><p>只能容纳文本或者其他行内元素，不能嵌套块级元素。</p><h3 id="块状元素" tabindex="-1"><a class="header-anchor" href="#块状元素" aria-hidden="true">#</a> 块状元素</h3><p>div,h1-h6,hr,menu,ol,ul,li,dl,table,p,form</p><p>本身属性为 display: block;</p><p>独占一行，每个块级元素都会从新的一行重新开始，从上到下排布，可以控制其宽度、高度等其他相关 css 属性，例如（padding、margin 等）</p><p>在不设置宽度的情况下，块级元素的宽度是它父级元素内容的宽度</p><p>在不设置高度的情况下，块级元素的高度是它本身内容的高度</p><h3 id="内联块状元素" tabindex="-1"><a class="header-anchor" href="#内联块状元素" aria-hidden="true">#</a> 内联块状元素</h3><p>内联块状元素综合了前两种的特性却各有取舍。</p><p>本身属性为 display: inline-block;</p><p>不自动换行</p><p>能够识别 width、height、line-height、padding、margin，默认排列顺序从左到右。</p><h2 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h2><ul><li>内联元素：用于不指定宽高，宽高由内容而定</li><li>块状元素：用于指定宽高，标签占满一行</li><li>内联块状元素：用于指定宽高，不占满一行</li></ul><p><em>部分答案整理自网络资源</em></p>',22),t=[d];function n(_,p){return e(),i("div",null,t)}const s=a(r,[["render",n],["__file","005-html布局元素的分类有哪些？描述每种布局元素的应用场景.html.vue"]]);export{s as default};
