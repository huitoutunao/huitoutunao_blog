import{_ as t,r as n,o,c as p,a,b as e,e as l,d as i}from"./app-4ec55863.js";const c={},s=i('<h1 id="如何系统优化页面" tabindex="-1"><a class="header-anchor" href="#如何系统优化页面" aria-hidden="true">#</a> 如何系统优化页面</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>页面优化就是让页面响应速度更快，由于一个页面在它不同的阶段，所侧重的关注点是不一样的，所以如果我们要讨论页面优化，就要分析一个页面生存周期的不同阶段：加载、交互和关闭。重点分析加载和交互阶段。</p><h2 id="加载阶段" tabindex="-1"><a class="header-anchor" href="#加载阶段" aria-hidden="true">#</a> 加载阶段</h2><p>这个阶段是指从请求到渲染出完整页面的过程。</p><p><strong>影响因素如下：</strong></p><ol><li>关键资源个数。</li><li>关键资源大小。</li><li>请求关键资源需要多少个 RTT。</li></ol><p>关键资源是指 HTML、JavaScript 和 CSS。</p><p>RTT 就是这里的往返时延。它是网络中一个重要的性能指标，表示从发送端发送数据开始，到发送端收到来自接收端的确认，总共经历的时延。通常 1 个 HTTP 的数据包在 14KB 左右，所以 1 个 0.1M 的页面就需要拆分成 8 个包来传输了，也就是说需要 8 个 RTT。</p><p><strong>对应优化如下：</strong></p><ul><li>如何减少关键资源个数？</li></ul><p>1、JavaScript 和 CSS 改成内联的形式。</p><p>2、如果 JavaScript 代码没有 DOM 或者 CSSOM 的操作，则可以改成 async 或者 defer 属性。</p>',13),d={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/link#attr-disabled",target:"_blank",rel:"noopener noreferrer"},h=i('<ul><li>如何降低关键资源大小？</li></ul><p>1、压缩 CSS 和 JavaScript 资源。</p><p>2、移除 HTML、CSS 和 JavaScript 无用注释。</p><ul><li>如何减少关键资源的 RTT 数？</li></ul><p>1、CDN。</p><p>2、结合前面两种方案。</p><h2 id="交互阶段" tabindex="-1"><a class="header-anchor" href="#交互阶段" aria-hidden="true">#</a> 交互阶段</h2><p>通常是由 JavaScript 触发交互动画，那就会造成重排或者重绘，还有另外一种情况，通过 CSS 实现一些变形、渐变、动画等特效，这是由 CSS 触发的，并且是在合成线程上执行的，这个过程称为合成。</p><p>性能代价排序是：重排 &gt; 重绘 &gt; 合成</p><p><strong>优化方案如下：</strong></p><ul><li>减少 JavaScript 脚本执行时间。</li></ul><ol><li>将一次执行的函数分解为多个任务，使得每次的执行时间不要过久。</li><li>采用 Web Workers。注意：Web Workers 中是无法通过 JavaScript 来访问 DOM 的，所以我们可以把一些和 DOM 操作无关且耗时的任务放到 Web Workers 中去执行。</li></ol><p>总之，在交互阶段，对 JavaScript 脚本总的原则就是不要一次霸占太久主线程。</p><ul><li>避免强制同步布局。</li></ul><p>所谓强制同步布局，是指 JavaScript 强制将计算样式和布局操作提前到当前的任务中。</p><ul><li>避免布局抖动。</li></ul><p>所谓布局抖动，是指在一次 JavaScript 执行过程中，多次执行强制布局和抖动操作。</p><ul><li>合理利用 CSS 合成动画。</li><li>避免频繁的垃圾回收。</li></ul><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h2>',19),_={href:"https://time.geekbang.org/column/intro/216",target:"_blank",rel:"noopener noreferrer"};function S(u,f){const r=n("ExternalLinkIcon");return o(),p("div",null,[s,a("p",null,[e("3、对于 CSS，如果不是在构建页面之前加载的，则可以添加媒体取消阻止显现的标志 "),a("a",d,[e("disabled"),l(r)]),e("。")]),h,a("p",null,[e("本文到这里就结束了。这是学习"),a("a",_,[e("《浏览器工作原理与实践》"),l(r)]),e("李兵老师课程的笔记。希望可以帮到你。")])])}const v=t(c,[["render",S],["__file","如何系统优化页面.html.vue"]]);export{v as default};
