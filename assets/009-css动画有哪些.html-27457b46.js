import{_ as n,o as s,c as a,d as t}from"./app-66d59838.js";const e={},p=t(`<h1 id="_009-css-动画有哪些" tabindex="-1"><a class="header-anchor" href="#_009-css-动画有哪些" aria-hidden="true">#</a> 009-CSS 动画有哪些</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>css 实现动画的方式有如下几种：</p><ul><li>transition 实现渐变动画</li><li>transform 过渡动画</li><li>animation 实现自定义动画</li></ul><h2 id="transition" tabindex="-1"><a class="header-anchor" href="#transition" aria-hidden="true">#</a> transition</h2><ul><li>property：需要赋予过渡动画的属性，如 width、height 等。</li><li>duration：过渡动画所需的时间。</li><li><code>timing-function</code>：过渡效果。</li><li>delay：过渡效果开始作用之前需要等待的时间。</li></ul><p><code>timing-function</code> 的值如下表格：</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>linear</td><td>匀速进行（等同 <code>cubic-bezier(0, 0, 1, 1)</code>）</td></tr><tr><td>ease</td><td>由慢到快再到慢（等同 <code>cubic-bezier(.25, .1, .25, 1)</code>）</td></tr><tr><td>ease-in</td><td>由慢到快（等同 <code>cubic-bezier(.42, 0, 1, 1)</code>）</td></tr><tr><td>ease-in-out</td><td>由快到慢（等同 <code>cubic-bezier(.42, 0, .58, 1)</code>）</td></tr><tr><td>ease-out</td><td>越来越慢（等同 <code>cubic-bezier(0, 0, .58, 1)</code>）</td></tr><tr><td>cubic-bezier</td><td>在 <code>cubic-bezier</code> 函数中定义自己的值，可能的值是 0 至 1 之间的数值</td></tr></tbody></table><p>鼠标移动上去发生过渡动画效果，举个例子：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.box </span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #0ff<span class="token punctuation">;</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> width .2s ease<span class="token punctuation">;</span>

  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="transform" tabindex="-1"><a class="header-anchor" href="#transform" aria-hidden="true">#</a> transform</h2><p>常用的功能如下：</p><ul><li>translate：平移</li><li>rotate：旋转</li><li>scale：缩放</li><li>skew：倾斜</li></ul><p>它常和 transition 配合使用，下面举个例子：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.box </span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #0ff<span class="token punctuation">;</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> all .2s ease<span class="token punctuation">;</span>

  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>
    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>.8<span class="token punctuation">,</span> 1.5<span class="token punctuation">)</span> <span class="token function">translate</span><span class="token punctuation">(</span>150px<span class="token punctuation">,</span> 10px<span class="token punctuation">)</span> <span class="token function">rotate</span><span class="token punctuation">(</span>90deg<span class="token punctuation">)</span> <span class="token function">skew</span><span class="token punctuation">(</span>10deg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行上面代码的结果是盒子放大、平移、旋转、倾斜。</p><h2 id="animation" tabindex="-1"><a class="header-anchor" href="#animation" aria-hidden="true">#</a> animation</h2><p>它的属性如下表格：</p><table><thead><tr><th>属性名</th><th>描述</th><th>属性值</th></tr></thead><tbody><tr><td>animation-name</td><td>指定 @keyframes 动画的名称</td><td></td></tr><tr><td>animation-duration</td><td>指定一个动画周期的时长，默认值为 0s，表示无动画</td><td></td></tr><tr><td>animation-timing-function</td><td>指定动画计时函数，即动画的速度曲线，默认是 ease</td><td>linear、ease、ease-in、ease-out、ease-in-out</td></tr><tr><td>animation-delay</td><td>定义动画于何时开始，默认是 0</td><td></td></tr><tr><td>animation-iteration-count</td><td>定义动画在结束前运行的次数 可以是 1 次 无限循环</td><td>infinite（无限次）</td></tr><tr><td>animation-direction</td><td>指示动画是否反向播放</td><td>normal、reverse、alternate、alternate-reverse</td></tr><tr><td>animation-fill-mode</td><td>设置 CSS 动画在执行之前和之后如何将样式应用于其目标</td><td>forwards、backwards、both</td></tr><tr><td>animation-play-state</td><td>指定动画播放状态，正在运行或暂停。默认是 running</td><td>running、pauser</td></tr></tbody></table><p>通过 <code>@keyframes</code> 来定义关键帧，例如让一个元素旋转一周，如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.box </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
  <span class="token property">animation</span><span class="token punctuation">:</span> my-animation 2s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 方法一</span>
<span class="token atrule"><span class="token rule">@keyframes</span> my-animation</span> <span class="token punctuation">{</span>
  <span class="token selector">0% </span><span class="token punctuation">{</span>
    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">50% </span><span class="token punctuation">{</span>
    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">100% </span><span class="token punctuation">{</span>
    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 方法二</span>
<span class="token comment">// @keyframes my-animation {</span>
<span class="token comment">//   from {</span>
<span class="token comment">//     transform: rotate(0deg);</span>
<span class="token comment">//   }</span>
<span class="token comment">//   to {</span>
<span class="token comment">//     transform: rotate(360deg);</span>
<span class="token comment">//   }</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面两种方法均可达到旋转一周的效果，其中 <code>from</code> 表示最开始的那一帧，<code>to</code> 表示结束时的那一帧。</p><p><em>部分答案整理自网络资源</em></p>`,26),i=[p];function c(o,l){return s(),a("div",null,i)}const d=n(e,[["render",c],["__file","009-css动画有哪些.html.vue"]]);export{d as default};
