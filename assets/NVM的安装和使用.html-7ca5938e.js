import{_ as o,r as t,o as l,c as d,a as n,b as e,e as a,d as i}from"./app-1a9b85d0.js";const c="/images/essays/nvm_1.png",r="/images/essays/nvm_2.png",p={},m=i('<h1 id="nvm-的安装和使用" tabindex="-1"><a class="header-anchor" href="#nvm-的安装和使用" aria-hidden="true">#</a> NVM 的安装和使用</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>现在想象一个场景，如果你有 2 个项目，它们分别依赖不同的 <code>Node.js</code> 版本环境，或者你需要使用新版的 <code>Node.js</code> 进行实验和学习，那么就需要一个管理 <code>Node.js</code> 的版本工具，而这就是 <code>nvm</code> 存在的价值。</p><p><code>nvm</code> 允许你使用命令行方式快速安装和使用不同版本的 <code>Node.js</code>。</p><p>下面我将介绍如何安装和使用 <code>nvm</code>，本人电脑是 <code>win10 64</code> 位操作系统。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2>',6),u=n("code",null,"Node.js",-1),h=n("code",null,"nvm",-1),v=n("code",null,"node_path",-1),b={href:"https://blog.csdn.net/qq_40968685/article/details/106279002",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/coreybutler/nvm-windows/releases",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"1.1.6",-1),k=n("code",null,"1.1.9",-1),f=n("code",null,"nvm use xxx",-1),x={href:"https://github.com/coreybutler/nvm-windows/issues/708",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"nvm-setup.zip",-1),w=n("strong",null,"注意路径不能有空格或中文",-1),j=n("code",null,"nvm",-1),$=n("code",null,"Node.js",-1),N={href:"https://www.jianshu.com/p/d0e0935b150a",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"nvm",-1),D=n("code",null,"nvm",-1),V=n("code",null,"settings.txt",-1),M={href:"https://segmentfault.com/a/1190000023716452",target:"_blank",rel:"noopener noreferrer"},E=i(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>node_mirror: https://npm.taobao.org/mirrors/node/
npm_mirror: https://npm.taobao.org/mirrors/npm/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>完成上面的安装流程后，先检验一下是否安装成功。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ nvm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>成功结果图如下：</p><p><img src="`+c+`" alt="nvm_1"></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 会提示 nvw 下的相关命令</span>
$ nvm

<span class="token comment"># 显示 node是运行在 32 位还是 64 位</span>
$ nvm arch

<span class="token comment"># 安装 node， version 是特定版本也可以是最新稳定版本 latest。可选参数 arch 指定安装 32 位还是 64 位版本，默认是系统位数</span>
$ nvm <span class="token function">install</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token punctuation">[</span>arch<span class="token punctuation">]</span>

<span class="token comment"># 查看已安装 node 版本</span>
$ nvm <span class="token function">ls</span>

<span class="token comment"># 开启 node 版本管理</span>
$ nvm on

<span class="token comment"># 关闭 node 版本管理</span>
$ nvm off

<span class="token comment"># 设置代理</span>
$ nvm proxy <span class="token punctuation">[</span>url<span class="token punctuation">]</span>

<span class="token comment"># 设置 node 镜像，设置后可至安装目录 settings.txt文件查看</span>
$ nvm node_mirror <span class="token punctuation">[</span>url<span class="token punctuation">]</span>

<span class="token comment"># 设置 npm 镜像，设置后可至安装目录 settings.txt文件查看</span>
$ nvm npm_mirror <span class="token punctuation">[</span>url<span class="token punctuation">]</span>

<span class="token comment"># 卸载指定版本 node</span>
$ nvm uninstall <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>

<span class="token comment"># 使用制定版本 node，可指定 32/64 位</span>
$ nvm use <span class="token punctuation">[</span>version<span class="token punctuation">]</span> <span class="token punctuation">[</span>arch<span class="token punctuation">]</span>

<span class="token comment"># 设置存储不同版本 node 的目录</span>
$ nvm root <span class="token punctuation">[</span>path<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装-node-js-版本" tabindex="-1"><a class="header-anchor" href="#安装-node-js-版本" aria-hidden="true">#</a> 安装 <code>Node.js</code> 版本</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ nvm <span class="token function">install</span> <span class="token number">12.22</span>.10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>附带的 <code>npm</code> 包可能会下载失败，这时候可以单独去 <code>npm</code> 官网找对应的版本下载（文末贴出了参考链接），然后将它解压到 <code>D:\\nvm\\nvm\\v12.22.10\\node_modules</code>，接着把解压后的文件夹名称改为 <code>npm</code>，接着把 <code>D:\\nvm\\nvm\\v12.22.10\\node_modules\\npm\\bin</code> 目录下面 4 个文件拷贝下，分别是 <code>npm/npx file</code> 和 <code>npm/npx .cmd file</code>，拷贝到目录 <code>D:\\nvm\\nvm\\v12.22.10</code>。</p><p>通过如下命令检测：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nvm use <span class="token number">12.22</span>.10
<span class="token function">node</span> <span class="token parameter variable">-v</span>
<span class="token function">npm</span> <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="更新于-2022-12-03" tabindex="-1"><a class="header-anchor" href="#更新于-2022-12-03" aria-hidden="true">#</a> 更新于 <code>2022-12-03</code></h4>`,13),B=n("code",null,"node v16.17.0",-1),I=n("code",null,"npm v8.15.0",-1),L=n("code",null,"npm init",-1),P={href:"https://github.com/npm/cli/releases",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"node-v16.17.0-win-x64",-1),z=n("code",null,"D:\\nvm\\nvm\\v16.17.0\\",-1),A=i(`<h3 id="配置全局模块安装路径" tabindex="-1"><a class="header-anchor" href="#配置全局模块安装路径" aria-hidden="true">#</a> 配置全局模块安装路径</h3><h4 id="查看当前-npm-包的全局安装路径" tabindex="-1"><a class="header-anchor" href="#查看当前-npm-包的全局安装路径" aria-hidden="true">#</a> 查看当前 npm 包的全局安装路径</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> prefix <span class="token parameter variable">-g</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="查看当前-npm-包的全局-cache-路径" tabindex="-1"><a class="header-anchor" href="#查看当前-npm-包的全局-cache-路径" aria-hidden="true">#</a> 查看当前 npm 包的全局 cache 路径</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> config get cache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="修改-npm-的包的全局安装路径" tabindex="-1"><a class="header-anchor" href="#修改-npm-的包的全局安装路径" aria-hidden="true">#</a> 修改 npm 的包的全局安装路径</h4><p>首先在对应路径创建文件夹 <code>nodejs</code> 和 <code>node_global</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">&quot;D:<span class="token entity" title="\\n">\\n</span>odejs<span class="token entity" title="\\n">\\n</span>ode_global&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="修改-npm-的包的全局-cache-位置" tabindex="-1"><a class="header-anchor" href="#修改-npm-的包的全局-cache-位置" aria-hidden="true">#</a> 修改 npm 的包的全局 cache 位置</h4><p>首先在对应路径创建文件夹 <code>nodejs</code> 和 <code>node_cache</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">&quot;D:<span class="token entity" title="\\n">\\n</span>odejs<span class="token entity" title="\\n">\\n</span>ode_cache&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="环境变量配置" tabindex="-1"><a class="header-anchor" href="#环境变量配置" aria-hidden="true">#</a> 环境变量配置</h4><p><code>此电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量 -&gt; 系统变量 -&gt; path -&gt; 编辑 -&gt; 新增路径-D:\\nodejs\\node_global</code>（路径可以根据 <code>npm prefix -g</code> 查看）</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>每次使用 nvm 切换 node 版本，最好都查看一下 npm 全局配置路径是否失效。</p></div><h3 id="安装-yarn" tabindex="-1"><a class="header-anchor" href="#安装-yarn" aria-hidden="true">#</a> 安装 yarn</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> i <span class="token parameter variable">-g</span> <span class="token function">yarn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,16),C={href:"https://www.jianshu.com/p/8963e6f80e67",target:"_blank",rel:"noopener noreferrer"},R=i('<ol><li>以管理的身份运行 powershell。</li><li>运行命令 <code>set-ExecutionPolicy RemoteSigned</code>。</li><li>执行策略更改。</li></ol><p>见下图： <img src="'+r+`" alt="nvm_2"></p><h3 id="更改存储路径" tabindex="-1"><a class="header-anchor" href="#更改存储路径" aria-hidden="true">#</a> 更改存储路径</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看 yarn 全局 bin 位置</span>
$ <span class="token function">yarn</span> global bin

<span class="token comment"># 查看 yarn 全局安装位置</span>
$ <span class="token function">yarn</span> global <span class="token function">dir</span>

<span class="token comment"># 查看 yarn 全局 cache 位置</span>
$ <span class="token function">yarn</span> cache <span class="token function">dir</span>

<span class="token comment"># 更改 yarn 全局 bin 位置</span>
$ <span class="token function">yarn</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">&quot;D:<span class="token entity" title="\\n">\\n</span>odejs\\yarn_bin&quot;</span>

<span class="token comment"># 更改 yarn 全局 global 位置</span>
$ <span class="token function">yarn</span> config <span class="token builtin class-name">set</span> global-folder <span class="token string">&quot;D:<span class="token entity" title="\\n">\\n</span>odejs\\yarn_global&quot;</span>

<span class="token comment"># 更改 yarn 全局 cache 位置</span>
$ <span class="token function">yarn</span> config <span class="token builtin class-name">set</span> cache-folder <span class="token string">&quot;D:<span class="token entity" title="\\n">\\n</span>odejs\\yarn_cache&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>D:\\nodejs\\yarn_bin</code> 添加到环境变量的 path 变量中，若该目录下自动生成了 bin 目录，则添加 <code>D:\\nodejs\\yarn_bin\\bin</code> 到环境变量中。</p><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h2><p>本文到这里就结束了，对安装 nvm 过程中遇到的问题做一个总结，希望我的分享能够对你有一点帮助。</p><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献" aria-hidden="true">#</a> 参考文献</h2>`,8),T={href:"https://blog.csdn.net/Anony_me/article/details/124153201",target:"_blank",rel:"noopener noreferrer"},F={href:"https://github.com/nvm-sh/nvm#important-notes",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/coreybutler/nvm-windows",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/coreybutler/nvm-windows/releases",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/coreybutler/nvm-windows/issues/373",target:"_blank",rel:"noopener noreferrer"},K={href:"https://github.com/npm/cli/releases",target:"_blank",rel:"noopener noreferrer"},O={href:"https://nodejs.org/en/download/releases/",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://github.com/npm/cli/releases/tag/v6.14.16",target:"_blank",rel:"noopener noreferrer"},U={href:"https://github.com/npm/cli/releases/tag/v8.3.1",target:"_blank",rel:"noopener noreferrer"},W={href:"https://juejin.cn/post/6946594249093677069",target:"_blank",rel:"noopener noreferrer"},X={href:"https://www.npmjs.com/package/mirror-config-china",target:"_blank",rel:"noopener noreferrer"};function Y(Z,nn){const s=t("ExternalLinkIcon");return l(),d("div",null,[m,n("p",null,[e("如果你电脑之前有安装过 "),u,e("，请卸载后再安装 "),h,e("，建议将环境变量里配置的 "),v,e(" 缓存全局模块路径也删掉。"),n("a",b,[e("卸载参考资料"),a(s)])]),n("p",null,[e("关于安装"),n("a",_,[e("nvm"),a(s)]),e("版本，我这里选择了 "),g,e("，因为我最开始安装 "),k,e(" 时，发现使用命令 "),f,e(" 会报错，查阅 "),n("a",x,[e("issue#708"),a(s)]),e(" 得知后面作者会修复。")]),n("p",null,[e("下载好安装程序（"),y,e("），解压后双击进行安装，过程中有两处地方需要选择安装路径，"),w,e("，一个是 "),j,e("，另一个是 "),$,e("。"),n("a",N,[e("安装过程参考资料"),a(s)])]),n("p",null,[e("由于国内网络访问慢，因此需要对 "),q,e(" 的下载源添加下淘宝镜像，在 "),D,e(" 安装目录找到 "),V,e(" 文本。"),n("a",M,[e("参考资料"),a(s)])]),E,n("p",null,[e("今天安装 "),B,e(" 对应的 "),I,e("，运行 "),L,e(" 命令报语法错误，因此来"),n("a",P,[e("这里"),a(s)]),e("手动下载对应的版本，下载至本地的压缩包是 "),S,e("，解压后有一个文件夹，把它里面的全部文件移至 "),z,e(" 即可。")]),A,n("p",null,[e("我安装完之后，运行 yarn 命令出现了报错，问题和解决方案"),n("a",C,[e("戳这里"),a(s)]),e("。")]),R,n("ul",null,[n("li",null,[n("a",T,[e("win10 nvm 安装推荐"),a(s)])]),n("li",null,[n("a",F,[e("nvm"),a(s)])]),n("li",null,[n("a",G,[e("nvm-windows"),a(s)])]),n("li",null,[n("a",H,[e("nvm-windows-releases"),a(s)])]),n("li",null,[n("a",J,[e("NPM github repo is moving from npm/npm to npm/cli and it causes NVM to fail to install it"),a(s)])]),n("li",null,[n("a",K,[e("npm 手动下载"),a(s)])]),n("li",null,[n("a",O,[e("查阅 nodejs 与 npm 匹配版本"),a(s)])]),n("li",null,[n("a",Q,[e("npm-v6.14.16"),a(s)])]),n("li",null,[n("a",U,[e("npm-v8.3.1"),a(s)])]),n("li",null,[n("a",W,[e("通过 nvm 安装 Node.js 与统一的全局模块安装路径的配置"),a(s)])]),n("li",null,[n("a",X,[e("mirror-config-china"),a(s)])])])])}const sn=o(p,[["render",Y],["__file","NVM的安装和使用.html.vue"]]);export{sn as default};
