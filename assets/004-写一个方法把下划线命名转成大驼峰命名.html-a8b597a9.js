import{_ as n,o as s,c as a,d as p}from"./app-091fe1e3.js";const t={},e=p(`<h1 id="_004-写一个方法把下划线命名转成大驼峰命名" tabindex="-1"><a class="header-anchor" href="#_004-写一个方法把下划线命名转成大驼峰命名" aria-hidden="true">#</a> 004-写一个方法把下划线命名转成大驼峰命名</h1><p>知识点：</p><ul><li>split 分割字符串</li><li>从数组的第二个元素开始处理，取出字符串的第一个字符转成大写 toUpperCase，最后再拼接</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toCamel</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> strArr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;_&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        strCamel <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> strArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            strCamel <span class="token operator">=</span> strArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> valStr <span class="token operator">=</span> strArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>
                valArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>valStr<span class="token punctuation">]</span><span class="token punctuation">,</span>
                valNew <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>

            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> kLen <span class="token operator">=</span> valArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k <span class="token operator">&lt;</span> kLen<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    valNew <span class="token operator">=</span> valArr<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    valNew <span class="token operator">+=</span> valArr<span class="token punctuation">[</span>k<span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            strCamel <span class="token operator">+=</span> valNew
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> strCamel
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;驼峰&#39;</span><span class="token punctuation">,</span> <span class="token function">toCamel</span><span class="token punctuation">(</span><span class="token string">&#39;a_c_def&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","004-写一个方法把下划线命名转成大驼峰命名.html.vue"]]);export{r as default};
