import{_ as p,r as o,o as c,c as i,a as n,b as s,e as t,d as e}from"./app-bc941942.js";const l="/images/essays/httn_cli1.gif",u={},r=e('<h1 id="从零搭建一个简单的-vue-脚手架" tabindex="-1"><a class="header-anchor" href="#从零搭建一个简单的-vue-脚手架" aria-hidden="true">#</a> 从零搭建一个简单的 Vue 脚手架</h1><p><img src="'+l+'" alt="脚手架预览图"></p><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>编程中的脚手架，我理解是通过机器自动生成开发前的基础代码，像建筑工程开始时搭建的架子，然后工人不断砌砖，直到建筑完成。脚手架有助于我们专注于 code，使我们更快、更好的完成项目开发。</p><p>虽然市面上有 <code>vue-cli</code> 这样优秀的脚手架，但是它所提供的基础代码，还不能满足我日常开发需求，因此在此基础上自定义项目模板。</p><p>为了方便拉取项目模板，自己学习了如何搭建前端脚手架，所以这篇文章也是记录自己的学习过程。</p>',6),d={href:"https://github.com/huitoutunao/simple-vue-cli",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"开始",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#开始","aria-hidden":"true"},"#"),s(" 开始")],-1),v=n("p",null,"在开始之前，我们先看下使用到的 npm 依赖包有哪些？",-1),m={href:"https://github.com/tj/commander.js",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/SBoudrias/Inquirer.js",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/chalk/chalk",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.npmjs.com/package/fs-extra",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.npmjs.com/package/semver",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/sindresorhus/ora",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.npmjs.com/package/validate-npm-package-name",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.npmjs.com/package/download-git-repo",target:"_blank",rel:"noopener noreferrer"},y=e(`<h2 id="新建项目" tabindex="-1"><a class="header-anchor" href="#新建项目" aria-hidden="true">#</a> 新建项目</h2><ol><li>在空文件夹下面初始化：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> init <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>文件目录大概如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>project
│  .npmignore
│  package.json
│  README.md
│
├─bin
│     cli.js
└─util
      checkVersion.js
      checkVersion.txt
      clearConsole.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>在 <code>package.json</code> 文件中，加入 <code>bin</code> 字段：</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token property">&quot;bin&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;httn-vue&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bin/cli.js&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),x={href:"https://docs.npmjs.com/cli/v7/configuring-npm/package-json#bin",target:"_blank",rel:"noopener noreferrer"},q=e(`<ol start="3"><li>新建对应的脚本命令文件 <code>cli.js</code></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文件开头必须是 <code>#!/usr/bin/env node</code>。<code>usr/bin/env</code> 表示可以去 <code>PATH</code> 目录中查找脚本解释器，同时指定使用 <code>node</code> 去执行该文件。</p><p>在当前文件夹下执行如下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">link</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ httn-vue
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),N={href:"https://docs.npmjs.com/cli/v7/commands/npm-link",target:"_blank",rel:"noopener noreferrer"},$=e(`<p>终端输出结果：hello world。</p><h2 id="核心文件" tabindex="-1"><a class="header-anchor" href="#核心文件" aria-hidden="true">#</a> 核心文件</h2><h3 id="cli-js-引入相关依赖和文件" tabindex="-1"><a class="header-anchor" href="#cli-js-引入相关依赖和文件" aria-hidden="true">#</a> <code>cli.js</code> 引入相关依赖和文件</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token hashbang comment">#!/usr/bin/env node</span>

<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> pkg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 操作系统文件</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> program <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 命令行</span>
<span class="token keyword">const</span> inquirer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;inquirer&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 询问交互</span>
<span class="token keyword">const</span> semver <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;semver&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 判断 node 版本是否在某个范围</span>
<span class="token keyword">const</span> chalk <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;chalk&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 彩色日志</span>
<span class="token keyword">const</span> ora <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;ora&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 加载动画</span>
<span class="token keyword">const</span> download <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;download-git-repo&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 拉取模板</span>
<span class="token keyword">const</span> validateProjectName <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;validate-npm-package-name&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 验证包名合法性</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> checkVersion <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../util/checkVersion&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 检查脚手架版本</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> clearConsole <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../util/clearConsole&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 清空日志</span>

<span class="token keyword">const</span> requiredVersion <span class="token operator">=</span> pkg<span class="token punctuation">.</span>engines<span class="token punctuation">.</span>node
<span class="token keyword">const</span> log <span class="token operator">=</span> console<span class="token punctuation">.</span>log
<span class="token keyword">const</span> loading <span class="token operator">=</span> <span class="token function">ora</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;加载中&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="检查-node-版本" tabindex="-1"><a class="header-anchor" href="#检查-node-版本" aria-hidden="true">#</a> 检查 node 版本</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">const</span> <span class="token function-variable function">checkNodeVersion</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">wanted<span class="token punctuation">,</span> id</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>semver<span class="token punctuation">.</span><span class="token function">satisfies</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>version<span class="token punctuation">,</span> wanted<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">includePrerelease</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span>
      <span class="token string">&#39;You are using Node &#39;</span> <span class="token operator">+</span> process<span class="token punctuation">.</span>version <span class="token operator">+</span> <span class="token string">&#39;, but this version of &#39;</span> <span class="token operator">+</span> id <span class="token operator">+</span>
      <span class="token string">&#39; requires Node &#39;</span> <span class="token operator">+</span> wanted <span class="token operator">+</span> <span class="token string">&#39;.\\nPlease upgrade your Node version.&#39;</span>
    <span class="token punctuation">)</span><span class="token punctuation">)</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">checkNodeVersion</span><span class="token punctuation">(</span>requiredVersion<span class="token punctuation">,</span> <span class="token string">&#39;httn-cli&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>semver.satisfies(version, range, option)</code>：判断 version 是否在 range 这个范围，结果返回 Boolean 值。 <code>{ includePrerelease: true }</code>：禁止从范围中排除预发布标记版本的默认行为，除非它们明确选择加入。</p><h3 id="a命令行操作" tabindex="-1"><a class="header-anchor" href="#a命令行操作" aria-hidden="true">#</a> a命令行操作</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ...</span>
program
  <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&#39;httn-cli&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">httn-cli </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pkg<span class="token punctuation">.</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;-v --version&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">usage</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;command&gt; [options]&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.usage</code> 和 <code>.name</code>：通过这两个选项可以修改帮助信息的首行提示，name 属性也可以从参数中推导出来。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ httn-vue
Usage: httn-cli <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.version()</code> 其默认选项为 <code>-V</code> 和 <code>--version</code>，设置了版本后，命令行会输出当前的版本号。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>program<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">httn-cli </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pkg<span class="token punctuation">.</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ httn-vue <span class="token parameter variable">--version</span>
<span class="token number">1.0</span>.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>版本选项也支持自定义设置选项名称，可以在 <code>.version()</code> 方法里再传递一些参数（长选项名称、描述信息）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>program<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">httn-cli </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pkg<span class="token punctuation">.</span>version<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;-v --version&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ httn-vue <span class="token parameter variable">-v</span>
<span class="token number">1.0</span>.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="b命令行操作" tabindex="-1"><a class="header-anchor" href="#b命令行操作" aria-hidden="true">#</a> b命令行操作</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>program
  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;create &lt;app-name&gt;&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;创建项目&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token parameter">projectName</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">你要创建的项目名称：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>projectName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ httnn-vue create my-project
你要创建的项目名称：my-project
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.command()</code> 的第一个参数为命令名称。命令参数可以跟在名称后面，也可以用 <code>.argument()</code> 单独指定。参数可为必选的（尖括号表示）、可选的（方括号表示）或变长参数（点号表示，如果使用，只能是最后一个参数）。</p><h3 id="执行构建项目" tabindex="-1"><a class="header-anchor" href="#执行构建项目" aria-hidden="true">#</a> 执行构建项目</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ httnn-vue create my-project
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>检查脚手架版本是否需要更新。</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">const</span> latest <span class="token operator">=</span> <span class="token function">checkVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 获取线上的脚手架版本</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>latest <span class="token operator">&amp;&amp;</span> semver<span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span>latest<span class="token punctuation">,</span> pkg<span class="token punctuation">.</span>version<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">当前版本过低，请及时更新版本至</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>latest<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>semver.gt(v1, v2)：v1 &gt; v2</code> 成立的话返回 true。 <code>chalk.red()</code> 终端输出彩色的日志。</p><ol start="2"><li>获取项目路径和检验文件名</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">const</span> inCurrent <span class="token operator">=</span> projectName <span class="token operator">===</span> <span class="token string">&#39;.&#39;</span>
<span class="token keyword">const</span> cwd <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 当前目录</span>
<span class="token keyword">const</span> newName <span class="token operator">=</span> inCurrent <span class="token operator">?</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span><span class="token string">&#39;../&#39;</span><span class="token punctuation">,</span> cwd<span class="token punctuation">)</span> <span class="token operator">:</span> projectName <span class="token comment">// 项目文件夹名称</span>
<span class="token keyword">const</span> targetDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>cwd<span class="token punctuation">,</span> projectName<span class="token punctuation">)</span> <span class="token comment">// 获取项目文件夹绝对路径</span>
<span class="token keyword">const</span> validateResult <span class="token operator">=</span> <span class="token function">validateProjectName</span><span class="token punctuation">(</span>newName<span class="token punctuation">)</span> <span class="token comment">// 检验文件名</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>validateResult<span class="token punctuation">.</span>validForNewPackages<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Invalid project name: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>projectName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    validateResult<span class="token punctuation">.</span>errors <span class="token operator">&amp;&amp;</span> validateResult<span class="token punctuation">.</span>errors<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span>red<span class="token punctuation">.</span><span class="token function">dim</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    validateResult<span class="token punctuation">.</span>warnings <span class="token operator">&amp;&amp;</span> validateResult<span class="token punctuation">.</span>warnings<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">warn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span>red<span class="token punctuation">.</span><span class="token function">dim</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Warning: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>warn<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>交互命令</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token function">clearConsole</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 清空日志</span>
<span class="token keyword">const</span> answer <span class="token operator">=</span> <span class="token keyword">await</span> inquirer<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;请输入项目名称&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;author&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;请输入项目作者名&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;请输入项目简介&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;使用哪种模板开发&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;tmp&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">choices</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;VueBase&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;VueMobile&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>拉取模板</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token function">download</span><span class="token punctuation">(</span><span class="token function">downloadAdress</span><span class="token punctuation">(</span>answer<span class="token punctuation">.</span>tmp<span class="token punctuation">)</span><span class="token punctuation">,</span> targetDir<span class="token punctuation">,</span> <span class="token function">downloadCallBack</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> answer<span class="token punctuation">,</span> targetDir<span class="token punctuation">)</span><span class="token punctuation">)</span>

loading<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&#39;green&#39;</span>
loading<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&#39;正在拉取模板&#39;</span>
loading<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>修改 <code>package.json</code> 文件</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">const</span> filename <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>targetDir<span class="token punctuation">,</span> <span class="token string">&#39;package.json&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 修改的文件路径</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> newPkgJson <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    newPkgJson <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>newPkgJson<span class="token punctuation">)</span>

    newPkgJson<span class="token punctuation">.</span>name <span class="token operator">=</span> answer<span class="token punctuation">.</span>name
    newPkgJson<span class="token punctuation">.</span>author <span class="token operator">=</span> answer<span class="token punctuation">.</span>author
    newPkgJson<span class="token punctuation">.</span>description <span class="token operator">=</span> answer<span class="token punctuation">.</span>description

    newPkgJson <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newPkgJson<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span>

    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> newPkgJson<span class="token punctuation">)</span>

    <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;拉取模板成功！&#39;</span><span class="token punctuation">)</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">第一步：$ cd </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>answer<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">第二步：$ yarn install or npm install</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">第三步：$ npm run serve</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发布脚手架" tabindex="-1"><a class="header-anchor" href="#发布脚手架" aria-hidden="true">#</a> 发布脚手架</h2><p>参考之前写的<a href="./NPM%E5%8F%91%E5%8C%85%E3%80%81%E6%9B%B4%E6%96%B0%E5%92%8C%E6%92%A4%E9%94%80">文章</a></p><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h2>`,37),V={href:"https://www.npmjs.com/package/httn-cli",target:"_blank",rel:"noopener noreferrer"},P=n("h2",{id:"参考文献",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考文献","aria-hidden":"true"},"#"),s(" 参考文献")],-1),E={href:"https://juejin.cn/post/6866435508487225358#heading-5",target:"_blank",rel:"noopener noreferrer"};function B(J,C){const a=o("ExternalLinkIcon");return c(),i("div",null,[r,n("p",null,[s("项目地址："),n("a",d,[s("Github"),t(a)])]),k,v,n("ul",null,[n("li",null,[n("a",m,[s("commander.js"),t(a)]),s("：是一款重量轻，表现力和强大的命令行框架，提供了用户命令行输入和参数解析强大功能。")]),n("li",null,[n("a",g,[s("Inquirer.js"),t(a)]),s("：交互式命令行工具。")]),n("li",null,[n("a",b,[s("chalk"),t(a)]),s("：是用于修改控制台字符串的样式，包括字体样式（加粗），颜色以及背景颜色等。")]),n("li",null,[n("a",h,[s("fs-extra"),t(a)]),s("：fs-extra 添加了未包含在本机 fs 模块中的文件系统方法，并为 fs 方法添加了 promise 支持。")]),n("li",null,[n("a",f,[s("semver"),t(a)]),s("：npm 语义版本器。")]),n("li",null,[n("a",w,[s("ora"),t(a)]),s("：加载动画")]),n("li",null,[n("a",_,[s("validate-npm-package-name"),t(a)]),s("：判断 npm 包名是否有效。")]),n("li",null,[n("a",j,[s("download-git-repo"),t(a)]),s("：是用于 从 GitHub，GitLab，Bitbucket 下载一个 git 仓库。")])]),y,n("p",null,[s("bin 的作用是指定各个内部命令对应的可执行文件的位置。关于 bin 的更多解释"),n("a",x,[s("戳这里"),t(a)]),s("。")]),q,n("p",null,[s("npm link 的作用是将 npm 模块链接到对应的运行项目中去，方便对模块进行调试和测试。更多解释"),n("a",N,[s("戳这里"),t(a)]),s("。")]),$,n("p",null,[s("脚手架搭建到这里就结束了。其实整体看下来还是比较基础的，之后脚手架有完善也会在这里更新，希望本篇文章可以帮助到你。"),n("a",V,[s("npm 地址"),t(a)])]),P,n("p",null,[n("a",E,[s("如何搭建一个属于自己的脚手架"),t(a)])])])}const R=p(u,[["render",B],["__file","从零搭建一个简单的Vue脚手架.html.vue"]]);export{R as default};
