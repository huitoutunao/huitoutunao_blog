import{_ as t,r as h,o as p,c as d,a as e,b as a,e as n,d as i}from"./app-66d59838.js";const l={},s=i('<h1 id="npm-发包、更新和撤销" tabindex="-1"><a class="header-anchor" href="#npm-发包、更新和撤销" aria-hidden="true">#</a> NPM 发包、更新和撤销</h1><h2 id="npm-是什么" tabindex="-1"><a class="header-anchor" href="#npm-是什么" aria-hidden="true">#</a> npm 是什么？</h2><p>npm 是世界上最大的软件注册表。来自世界各地的开发人员都使用 npm 共享软件包，许多组织也使用 npm 来管理私人包。</p><h2 id="npm-发布包" tabindex="-1"><a class="header-anchor" href="#npm-发布包" aria-hidden="true">#</a> npm 发布包</h2><p>在你即将要发布的项目根目录打开终端。</p><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h3><ol><li>npm 包名命名限制：不能有大写字母和空格。</li><li>npm 的包名不能和已发布的包名重复，可以在搜素引擎或者 npm 官网查询是否有这个包名。</li><li>如果你要发布的包里有私密代码，可以写入文件 .npmignore 中，这样上传就会忽略。</li></ol><h3 id="注册账号" tabindex="-1"><a class="header-anchor" href="#注册账号" aria-hidden="true">#</a> 注册账号</h3>',8),o={href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"},c=i(`<h3 id="首次发布" tabindex="-1"><a class="header-anchor" href="#首次发布" aria-hidden="true">#</a> 首次发布</h3><p>首先 npm adduser 添加你的账号，在终端输入密码时，不会有显示，按照你正确密码输入按回车即可，然后 npm publish 即可发布。</p><h3 id="非首次发布" tabindex="-1"><a class="header-anchor" href="#非首次发布" aria-hidden="true">#</a> 非首次发布</h3><p>首先 npm login 登录你的账号，然后 npm publish 即可发布。</p><h2 id="npm-更新包" tabindex="-1"><a class="header-anchor" href="#npm-更新包" aria-hidden="true">#</a> npm 更新包</h2><p>首先是 npm version patch 更新包版本号（<a href="#%E7%89%88%E6%9C%AC%E5%8F%B7%E8%AF%B4%E6%98%8E">详见</a>），或者手动去修改 package.json 文件里面的 version 字段，然后 npm publish 即可发布更新。</p><h3 id="版本号说明" tabindex="-1"><a class="header-anchor" href="#版本号说明" aria-hidden="true">#</a> 版本号说明</h3><p>v1.0.0-0 主版本号(major).次版本号(minor).修订号(patch)-预发布号(release)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm version [&lt;newversion&gt; | major | minor | patch | premajor | preminor | prepatch | prerelease [--preid=&lt;prerelease-id&gt;] | from-git]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>prerelease: 升级预发布号，一般是 1.0.0 =&gt; 1.0.1-0，如果没有预发布号，则增加 minor，同时prerelease 设为 0；如果有 prerelease， 则 prerelease 增加 1。</li><li>prepatch: 升级修订号，保留预发布号，一般是 1.0.0 =&gt; 1.0.1-0。</li><li>preminor: 升级次版本号，保留预发布号，一般是 1.0.0 =&gt; 1.1.0-0。</li><li>premajor: 升级主版本号，保留预发布号，一般是 1.0.0 =&gt; 2.0.0-0。</li><li>patch：表示修改 bug 版本，一般是 1.0.x。</li><li>minor：表示更新新特性版本，一般是 1.x.1。</li><li>major：表示改动特别大版本，一般是 2.0.0。</li></ul><h2 id="npm-撤销包" tabindex="-1"><a class="header-anchor" href="#npm-撤销包" aria-hidden="true">#</a> npm 撤销包</h2><p>npm unpublish。按照官网规范，在 24 小时内发布的包是允许撤销的，但是如果你的包已经在社区有一定影响力了，就不要撤销了，因为那些依赖于这个包的开发人员会崩溃的😂。如果你实在是要撤销包，那么这里建议使用这条命令：npm deprecate &lt;pkg&gt;[@&lt;version&gt;] &lt;message&gt;，如：npm deprecate npmdemo &quot;这个包已经不再更新维护了，请谨慎使用！&quot;。</p><h3 id="注意-1" tabindex="-1"><a class="header-anchor" href="#注意-1" aria-hidden="true">#</a> 注意</h3><ul><li>如果你撤销了再发布，命名和版本号都不能使用撤销前的，所以操作需要谨慎。</li></ul><h2 id="npm-卸载包" tabindex="-1"><a class="header-anchor" href="#npm-卸载包" aria-hidden="true">#</a> npm 卸载包</h2>`,15),m={href:"https://www.npmjs.cn/getting-started/uninstalling-local-packages/",target:"_blank",rel:"noopener noreferrer"};function u(_,g){const r=h("ExternalLinkIcon");return p(),d("div",null,[s,e("p",null,[a("前往官网："),e("a",o,[a("https://www.npmjs.com/"),n(r)])]),c,e("p",null,[e("a",m,[a("查看文档"),n(r)])])])}const x=t(l,[["render",u],["__file","NPM发包、更新和撤销.html.vue"]]);export{x as default};
